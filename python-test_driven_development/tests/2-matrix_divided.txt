>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[10, 12, 14], [3, 12, 22]], 3)
[[3.33, 4.0, 4.67], [1.0, 4.0, 7.33]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([['h'], [1]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], [2, 3]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3], [1,2,3]], "h")
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[10, 12, 14], [3, 12, 22]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2,3], [1,2,3]], float('inf'))
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix_divided([[1,2],[1,2]])
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
